<?php
/*
Работа с %

1. Даны переменные $a = 10 и $b = 3. Найдите остаток от деления $a на $b.
*/

$a = 10;
$b = 3;
$c = fmod($a, $b);
echo $c."<br>";

//--------------------------------------------------------------------
/*
2. Даны переменные $a и $b. Проверьте, что $a делится без остатка на $b. Если это так — выведите 'Делится' и результат деления, иначе выведите 'Делится с остатком' и остаток от деления.
*/

$a = 10;
$b = 2;
$c = fmod($a, $b);
$d = $a / $b;
if ($c == 0) {
	echo $d." Делится";
}
else {
	echo $c." Делится с остатком";
}
echo "<br>";

//--------------------------------------------------------------------
/*
Работа с модулем

3. Даны переменные $a и $b. Найдите модуль разности $a и $b. Проверьте работу скрипта самостоятельно для различных $a и $b.
*/

$a = 3.5;
$b = 2;
$c = $a - $b;
echo abs($c)."<br>";

//--------------------------------------------------------------------
/*
4. Даны переменные $a и $b. Отнимите от $a переменную $b и результат присвойте переменной $c. Сделайте так, чтобы в любом случае в переменную $c записалось положительное значение. Проверьте работу скрипта при $a и $b, равных соответственно 3 и 5, 6 и 1.
*/

$a = 3;
$b = 5;
$c = $a - $b;
echo abs($c)."<br>";

$a = 6;
$b = 1;
$c = $a - $b;
echo abs($c)."<br>";

//--------------------------------------------------------------------
/*
Работа со степенью и корнем

5. Возведите 2 в 10 степень. Результат запишите в переменную $st.
*/

$st = pow(2, 10);
echo $st."<br>";

//--------------------------------------------------------------------
/*
6. Найдите квадратный корень из 245.
*/

$a = sqrt(245);
echo $a."<br>";

//--------------------------------------------------------------------
/*
7. Дан массив с элементами 4, 2, 5, 19, 13, 0, 10. Найдите квадратный корень из суммы квадратов его элементов. Для решения воспользуйтесь циклом foreach.
*/

$arr = [4, 2, 5, 19, 13, 0, 10];
$arr2 = [];
$sum = 0;
foreach ($arr  as $value) {
	 $arr2[] = sqrt($value);
     $sum = array_sum($arr2);
}
echo $sum."<br>";

$sqrt = sqrt($sum);
echo $sqrt." = квадратный корень из суммы квадратов элементов массива<br>";

//--------------------------------------------------------------------
/*
Работа с функциями округления

8. Найдите квадратный корень из 379. Результат округлите до целых, до десятых, до сотых.
*/

$sqrt = sqrt(379);
echo round($sqrt)." ; "; // 123.8
echo round($sqrt, 2)." ; "; // 123.84
echo round($sqrt, 3)." задача 8<br>"; // 123.839

//--------------------------------------------------------------------
/*
9. Найдите квадратный корень из 587. Округлите результат в большую и меньшую сторону, запишите результаты округления в ассоциативный массив с ключами 'floor' и 'ceil'.
*/

$sqrt = sqrt(587);
$a = ceil($sqrt);
$b = floor($sqrt);
$arr = ['floor'=>$b, 'ceil'=>$a];
print_r($arr);
echo "<br>";

//--------------------------------------------------------------------
/*
Работа с min и max

10. Даны числа 4, -2, 5, 19, -130, 0, 10. Найдите минимальное и максимальное число.
*/

echo max(4, -2, 5, 19, -130, 0, 10)."<br>";
echo min(4, -2, 5, 19, -130, 0, 10)."<br>";

//--------------------------------------------------------------------
/*
Работа с рандомом

11. Выведите на экран случайное число от 1 до 100.
*/

echo rand(1, 100)."<br>";

//--------------------------------------------------------------------
/*
12. Сделайте так, чтобы каждый раз при обновлении страницы на экран выводилась случайным образом одна из трех картинок.
*/

$arr = ['Screenshot_2.png', 'Screenshot_3.png', 'Screenshot_4.png'];
$a = $arr[rand(1, 3) - 1];
echo "<img src = $a>";
echo "<br>";

//--------------------------------------------------------------------
/*
13. Заполните массив 10-ю случайными числами. (Подсказка: нужно воспользоваться циклами for или while).
*/

$arr = [];
for ($i=0; $i<10; $i++) {
	$arr[] = rand();
}
print_r($arr);
echo "<br>";

//-------------------------------------------------------------------
/*
Общие задачи

14. Напишите скрипт, который будет находить корни квадратного уравнения.
*/

function kvadr ($a, $b, $c) {
	$d = $b**2 - 4* $a * $c;
	if ($d <0) 
		return ["Корней нет"];
	if ($d == 0) 
		return  [-$b / (2*$a)];
	else 
		 return [(-$b + sqrt($d)) / (2 * $a),
		  (-$b - sqrt($d)) / (2 * $a)];
}
print_r (kvadr(2, 8, 2));
echo "<br>";

//-------------------------------------------------------------------
/*
15. Напишите скрипт, который будет находить факториал числа. Факториал — это произведение всех целых чисел, меньше данного. Например, 4! = 1*2*3*4 = 24.
*/

function fak($a) {
	$result = $a;
	if ($a == 1) {
		return $result;
	}
	else {
		return $result *= fak($a-1);
	}
}
echo fak(4);
echo "<br>";

//-------------------------------------------------------------------
/*
16. Напишите скрипт, который проверяет, является ли данное число простым (простое число — это то, которое делится только на 1 и на само себя).
*/

function rrr($a) {
	for ($i = 2; $i <= sqrt($a); $i++) {
		if ($a % $i == 0)
			return "Не простое";
	}
	return "Простое";
}
echo rrr(30);
echo "<br>";

//-------------------------------------------------------------------
/*
17. Дан массив $arr. Найдите среднее арифметическое его элементов. Подсказка: количество элементов массива можно подсчитать функцией count. Проверьте задачу на массиве с элементами 12, 15, 20, 25, 59, 79.
*/

$arr = [12, 15, 20, 25, 59, 79];
$count = count($arr);
$sum = array_sum($arr);
$result = $sum / $count;
echo $result."<br>";

//-------------------------------------------------------------------
/*
18. Напишите скрипт-калькулятор единого налога. Налог считается так: если вы заработали менее, чем ставка $stavka этого налога, умноженная на 30 — то платите ставку. Если же вы заработали более, чем 30*$stavka, то платите не только ставку налога, но и 5% от той суммы, на которую вы превысили 30*$stavka.
*/

function nalog ($a, $stavka) {
	if ($a < $stavka * 30)
		return $stavka;
	else {
		return $stavka + ($a - $stavka * 30) * 0.05;
	}
}
echo nalog(4000, 17)."  Налог<br>";

//-------------------------------------------------------------------
/*
19. Напишите скрипт-калькулятор оплаты за электроэнергию. Сумма считается так: если вы потратили за месяц менее 150 киловатт, то сумма считается по одной ставке $summ1 за 1 киловатт, всё, что больше 150 и меньше 300 киловатт считается по ставке $summ2, а все киловатты после 300 — по ставке $summ3.
*/

function energy ($a) {
	$summ1 = 1;
	$summ2 = 2;
	$summ3 = 3;
if ($a<150) 
	return $a * $summ1;
if ($a<300) 
	return $a * $summ2;
else
	return $a * $summ3;
}
echo energy (450)."<br>";

//-------------------------------------------------------------------
/*
20. Напишите скрипт, который найдет все простые числа в заданном промежутке. Проверьте его работу на промежутке от 1 до 1000.
*/
function prost($start, $end) {
	$result = [];
	for ($i = $start; $i < $end; $i++) { 
		if (rrr($i) == "Простое") {
			$result[] = $i;
		}
	}
	return $result;
}
print_r (prost(1, 1000));
echo "<br>";

//-------------------------------------------------------------------
/*
21. Напишите скрипт, который будет находить тройки целых чисел, удовлетворяющих теореме Пифагора.
*/
function troyki($n, $m)
{
	$result = [];
	$c = floor($n * sqrt(2)) + 1;
	while ($c <= $m)
	{
		$k = floor($c / sqrt(2));
		for ($a = $n; $a < $k; $a++)
		{
			$b2 = $c ** 2 - $a ** 2;
			$b = floor(sqrt($b2));
			if ($b ** 2 == $b2)
			{
				echo "[$a, $b, $c] ";
			}
		}
		$c++;
	}
}
troyki(1, 100);
?>