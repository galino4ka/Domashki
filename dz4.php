<?php
/*
1. Дан массив с произвольными числами. Сделайте так, чтобы элемент
повторился в массиве количество раз, соответствующее его числу.
Пример: array(1, 3, 2, 4)​ превратится в array(1, 3, 3, 3, 2, 2, 4, 4, 4, 4)​.
*/

$arr=array(1, 3, 2, 4);
function arrr($arr) {
	$result=array();
	$count=count($arr);
	for($i=0; $i<$count; $i++){
		for($ii=0; $ii<$arr[$i]; $ii++) {
			$result[]=$arr[$i];
		}
	}
	print_r ($result);
	return $result;
}
arrr($arr);
echo "<br>";

//-----------------------------------------------------------------------------
/*
2. Дан массив с произвольными целыми числами. Сделайте так, чтобы первый элемент стал ключом второго элемента, третий элемент -
ключом четвертого и так далее. Пример: array(1, 2, 3, 4, 5, 6) превратится в array(1=>2, 3=>4, 5=>6)​.
*/

$arr=array(1, 2, 3, 4, 5, 6);
function arkey($arr) {
	$result=array();
	$count=count($arr);
	for($i=0; $i<$count; $i++) {
		if ($i%2!=0)
		$result[$i]=$arr[$i];
	}
	print_r ($result);
	return $result;
}
arkey($arr);
echo "<br>";
//-----------------------------------------------------------------------------
/*
3. Дана строка. Удалите из этой строки четные символы.
*/
$a='abcdefgh';
function strok($a) {
	$str=strlen($a);
	$result='';
	for ($i=0; $i<$str; $i++) {
		if ($i%2==0)
			$result.=$a{$i};	
	}
	return $result;
} 
$a= strok($a);
echo "$a<br>";

//-----------------------------------------------------------------------------
/*
4. Дана строка. Поменяйте ее первый символ на второй и наоборот, третий на четвертый и наоборот, пятый на шестой и наоборот и так
далее. То есть из строки '12345678'​ нужно сделать '21436587'​.
*/
$a='12345678';
$strlen=strlen($a);
for ($i=0; $i<$strlen; $i++) {
	if ($i%2==0) {
		$c=$a{$i};
        $a{$i}=$a{$i+1};
        $a{$i+1}=$c;
	}
}
echo "$a<br>";

//-----------------------------------------------------------------------------
/*
5. Напишите функцию, которая подсчитывает количество всех значений массива. Функция должна учитывать вложенность массивов. (функцией array_count_values пользоваться нельзя).
*/

function mycount($values, &$counts=[]) {
	foreach ($values as $value) {
		if (is_array($value)) {
			mycount($value, $counts);
		} else {
			if (isset($counts[$value])) {
				$counts[$value]++;
			}
			else {
				$counts[$value] = 1;
			}
		}
	}
	return $counts;
}
$arr=array (array( 4,6,23,8), array(6,7,4,23,56));
print_r (mycount($arr));
echo "<br>";

//-----------------------------------------------------------------------------
/*
6. Напишите функцию, которой в параметре передается передается массив из случайных чисел. Функция возвращает массив из
уникальных (не повторяющихся) значений (аналог функции array_unique).
*/

function unikal($a) {
	$result=array();
	$count=count($a);
	for ($i=0; $i<$count; $i++) {
		$search = FALSE;
		for ($ii=0; $ii<count($result); $ii++) {
			if ($result[$ii] == $a[$i]) {
				$search = $ii;
				break;
			}
		}
		if ($search === FALSE)
			$result[]=$a[$i];
	}
	return $result;
} 
print_r (unikal(array(1,7,1,4,9,7,56)));

echo "<br>";

//-----------------------------------------------------------------------------
/*
7. Напишите функцию, которая будет противоположной array_unique, т.е. будет оставлять дубликаты, но удалять не повторяющиеся значения.
*/

function dubl($a) {
	$result=array();
	$result2=array();
	$count=count($a);
	for ($i=0; $i<$count; $i++) {
		$search = FALSE;
		for ($ii=0; $ii<count($result); $ii++) {
			if ($result[$ii] == $a[$i]) {
				$search = $ii;
				break;
			}
		}
		if ($search === FALSE)
			$result[]=$a[$i];
		else
	        $result2[]=$a[$i];
	}
	return $result2;
} 
print_r (dubl(array(1,7,1,4,9,7,56)));

echo "<br>";

//------------------------------------------------------------------------------
/*
8. Напишите функцию, которой передается фамилия имя и отчество, а функция возвращает фамилию и инициалы. Например, передаем
Ivanov Ivan Ivanovich и нам выводит: Ivanov I. I.
*/

function imya($a, $b, $c) {
	$b=$b{0};
	$c=$c{0};
	$result="$a $b. $c." ;	
	return $result;
}
print_r (imya('Ivanov', 'Ivan', 'Ivanovich'));
echo "<br>";

//------------------------------------------------------------------------------
/*
9. (+1) Таблица умножения. Напишите функцию, которая принимает на вход два параметра: количество строк и количество колонок. Функция
возвращает​ (не выводит на экран!) таблицу умножения вида http://joxi.ru/brR577kiJJNRXA. Можно использовать table или div теги
html. Цвет перемножаемых колонок и строк можете задать отдельным третьим параметром в виде hex-кода цвета.
*/
?>

<?php

function tablica($tr, $cols) {
	$result='<!DOCTYPE HTML>
			<html>
			  <head></head>
			  <body>
			  <br>
				<table border="1">';
	
	$b=0;
	for ($i=1; $i<=$tr; $i++) {
		if ($i==1)
		    $result.='<tr bgcolor="green" style="color: white">';
		else
			$result.='<tr>';
		for ($ii=1; $ii<=$cols; $ii++) {
			if ($ii==1)
				$result.='<td bgcolor="green" style="color: white" width="20">';
			else
				$result.='<td width="20">';
			$b=$i*$ii;
			$result.= $b;
			$result.='</td>';
		}
		$result.='</tr>';
	}
	$result.='</table></body></html>';
	
	return $result;
}
echo (tablica(5,5));
echo " - задача 9 <br>";

//-------------------------------------------------------------------------------
/*
10. (+1) Написать рекурсивную функцию, которая на вход получает число и вычисляет и возвращает​ значение факториала этого числа.
*/

function faktor($a) {
	$result=$a;
	if ($a==1)
		return $result;
	$result=$result * faktor($a-1);
	return $result;
}
echo faktor(5);
echo " - задача 10 <br>";

//--------------------------------------------------------------------------------
/*
11.(+1) Написать функцию (рекурсивную либо обычную - по желанию), которая принимает на вход параметр (например, $n) и вычисляет
число Фибоначчи до предела $n. Результат вычисления возвращается этой же функцией.
*/

function fibonachi($n) {
	$sum=1;
	$a=0;
	$sum2=0;
	for ($i=1; $i<$n; $i++) {
		$sum2=$a + $sum;
		$a=$sum;
		$sum=$sum2;
	}
	return $sum;
}
echo fibonachi(6);
echo " - задача 11 <br>";

//--------------------------------------------------------------------------------
/*
12.(+1) Напишите рекурсивную функцию, принимающую на вход натуральное число $n. Функция возвращает строку из всех чисел от 1
до $n либо от $n до 1. За порядок сортировки должен отвечать дополнительный параметр функции - $order, который может
принимать значение ‘desc’ (убывающий) или ‘asc’ (возрастающий) и по-умолчанию должен быть равен ‘desc’.
*/

function rrr($n, $order='desc') {
	$result='';
	if ($n==0)
		return $result;
	if ($order=='asc')
		$result=rrr($n-1, $order). $n;
	else
		$result=$n. rrr($n-1, $order);
	return $result;	
}
echo rrr(7, 'asc');
echo " - задача 12 <br>";
//--------------------------------------------------------------------------------


?>