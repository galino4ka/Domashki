<?php
/*
Работа с регистром символов

1. Дана строка 'Привет, мир!'. Сделайте из нее строку 'ПРИВЕТ МИР!'.
*/

$a= 'Привет мир!';
$a= strtoupper($a);
echo $a."<br>";
//----------------------------------------------------------------------------
/*
2. Дана строка 'PHP'. Сделайте из нее строку 'php'.
*/

$a= 'PHP';
$a= strtolower($a);
echo $a."<br>";;
//----------------------------------------------------------------------------
/*
3. Дана строка 'москва'. Сделайте из нее строку 'Москва'.
*/

$a= 'moskva';
$a=  ucfirst($a);
echo $a."<br>";

//----------------------------------------------------------------------------
/*
4. Дана строка 'МОСКВА'. Сделайте из нее строку 'Москва'.
*/

$a= 'Moskva';
$a=  lcfirst($a);
echo $a."<br>";

//----------------------------------------------------------------------------
/*
5. Дана строка 'иванов иван иванович'. Сделайте из нее строку 'Иванов Иван Иванович'.
*/

$a= 'ivanov ivan ivanovich';
$b= explode(" ", $a);
$b = array_map("ucfirst", $b);
$c = implode(" ", $b);
echo $c."<br>";

//----------------------------------------------------------------------------
/*
Работа с strlen, substr

6. Дана строка 'я учу PHP!'. Найдите количество символов в этой строке.
*/

$a= 'я учу PHP!';
$b= strlen ($a);
echo $b."<br>";

//---------------------------------------------------------------------------
/*
7. Дана строка 'я учу PHP!'. Вырежьте из нее слово 'учу' и слово 'PHP'.
*/

$a= 'я учу PHP!';
echo substr($a,  1,  -1)."<br>";
echo substr($a,  1,  -4)."<br>";
echo substr($a,  5,  -1)."<br>";

//---------------------------------------------------------------------------
/*
8. Дана переменная $str, в которой хранится какой-либо текст. Реализуйте обрезание длинного текста по следующему принципу: если количество символов этого текста больше заданного в переменной $n, то в переменную $result запишем первые $n символов строки $str и добавим в конец многоточие '...'. В противном случае в переменную $result запишем содержимое переменной $str.
*/

$str = 'ivanov ivan ivanovich';
$n = 12;
$result = substr($str, 0, $n);
echo $result."...<br>";

//---------------------------------------------------------------------------
/*
9. Напишите функцию, которая генерирует пароль. Функция должна принимать параметр. Параметр должен задавать количество символов в пароле.
*/

function pas ($b) {
    $a = '!@#$%^&*()qwertyuiopasdfghjkl;zxcvbnm,.';
    $result= '';
    for ($i=0; $i<$b; $i++) {
        $rand= rand(0, strlen($a));
        $result.=substr($a, $rand, 1);      
    }
    return $result;
}
echo pas(5);

//---------------------------------------------------------------------------
/*
10. Создайте переменную $password. Присвойте переменной $password результат функции из предыдущего примера. Если количество символов пароля больше 5-ти и меньше 10-ти, то выведите пользователю сообщение о том, что пароль подходит, иначе сообщение о том, что нужно придумать другой пароль.
*/

$password= pas(7);
$result= strlen($password);
if ($result>5 && $result<10) {
    echo "Пароль подходит";
}
else {
        echo "Придумайте другой пароль";
}
echo "<br>";
//---------------------------------------------------------------------------
/*
11. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно столько рядов, чтобы последний элемент пирамидки состоял из одного символа. Первый ряд пирамиды должен хранится в переменной $str (может иметь различное количество символов). Подсказка: воспользуйтесь функциями strlen и substr.

xxxxxxxxxx
xxxxxxxxx
xxxxxxxx
xxxxxxx
xxxxxx
*/

$str = 'xxxxxxxx';
$y = strlen($str);
for ($i = 0; $i < $y; $i++)
{
    $str= substr($str, 0, -1);
    echo "$str<br>";
}

//---------------------------------------------------------------------------
/*
Работа с str_replace

12. Дана строка 'Я-учу-PHP!'. Замените все дефисы на тег '<br>'.
*/

$a= 'Я-учу-PHP!';
$b= str_replace ("-", " ", $a);
echo $b."<br>";

//---------------------------------------------------------------------------
/*
13. Дана строка '31.12.2013'. Замените все точки на дефисы.
*/

$a= '31.12.2013';
$b= str_replace (".", "-", $a);
echo $b."<br>";

//---------------------------------------------------------------------------
/*
14. Дана строка $str. Замените смайлики ':)', ':(', '^-^', которые встречаются в этой строке на соответсвующие картинки (<img src=''>).
*/

$a= 'Улыбка :) грусть :( смешно ^-^';
$b= str_replace (":)", "<img src='Screenshot_2.png'>", $a);
$b= str_replace (":(", "<img src='Screenshot_3.png'>", $b);
$b= str_replace ("^-^", "<img src='Screenshot_4.png'>", $b);
echo $b."<br>";

//---------------------------------------------------------------------------
/*
15. Дана переменная $str, в которой хранится строка русского текста. Напишите скрипт, который запишет транслит этого текста в переменную $translit. Напишите также скрипт, который выполнит обратную операцию.
*/

$str= 'Я живу в Украине';
function an ($a) {
    $ru= array("a", "б", "в", "г", "д", "е", "ж", "з", "и", "й", "к", "л", "м", "н", "о", "п", "р", "с", "т", "у", "ф", "х", "ц", "ч", "ш", "щ", "ы", "э", "ю", "я");
    $RU= array_map ("strtoupper", $ru);
    $angl = array("a", "b", "v", "g", "d", "e", "zh", "z", "i", "iy", "k", "l", "m", "n", "o", "p", "r", "s", "t", "u", "f", "h", "c", "ch", "sh", "sch", "y", "e", "yu", "ya");
    $ANGL= array_map ("strtoupper", $angl);
    $result= str_replace($ru, $angl, $a);
    $result= str_replace($RU, $ANGL, $result);
    return $result;
}
$translit= an($str);
echo $translit."<br>";

//--------------------------------------------------------------------------
/*
Работа с explode, implode

16. Дана строка 'я учу PHP!'. С помощью функции explode запишите каждое слово этой строки в отдельный элемент массива.
*/

$a= 'я учу PHP!';
print_r (explode(" ", $a));
echo "<br>";

//--------------------------------------------------------------------------
/*
17. Дан массив с элементами 'html', 'css', 'php', 'js'. С помощью функции implode создайте строку из этих элементов, разделенных запятыми.
*/
$arr= ['html', 'css', 'php', 'js'];
$arr2= implode(",", $arr);
print_r ($arr2);
echo "<br>";

//-------------------------------------------------------------------------
/*
18. В переменной $date лежит дата в формате '2013-12-31'. Преобразуйте эту дату в формат '31.12.2013'.
*/

$date= '2013-12-31';
$date2= explode("-", $date);
echo "$date2[2].$date2[1].$date2[0]<br>";

//-------------------------------------------------------------------------
/*
19. В переменной $date лежит дата в формате '31.12.2013'. Преобразуйте эту дату в формат '2013-12-31'.
*/

$date= '31.12.2013';
$date2= explode(".", $date);
echo "$date2[2]-$date2[1]-$date2[0]<br>";

//-------------------------------------------------------------------------
/*
Работа с trim, ltrim, rtrim

20. Дана строка ' php '. Сделайте из нее 3 разных строки с помощью функций класса trim: 'php', ' php', 'php '.
*/

$a = ' php ';
echo trim($a).'<br>';
echo ltrim($a).'<br>';
echo rtrim($a).'<br>';

//-------------------------------------------------------------------------
/*
Работа с strip_tags и htmlspecialchars

21. Дана строка 'html, <b>php</b>, js'. Удалите теги из этой строки.
*/

$a = 'html, <b>php</b>, js';
echo strip_tags($a).'<br>';

//-------------------------------------------------------------------------
/*
22. Дана строка 'html, <b>php</b>, js'. Выведите ее на экран 'как есть': то есть браузер не должен преобразовать <b> в жирный.
*/

$a = 'html, <b>php</b>, js';
echo htmlspecialchars($a).'<br>';

//-------------------------------------------------------------------------
/*
Работа с chr и ord

23. Узнайте код символов 'a', 'b', 'c', пробела.
*/

echo ord('a').";  ";
echo ord('b').";  ";
echo ord('c')."<br>";

//-------------------------------------------------------------------------
/*
24. Изучите таблицу ASCII. Определите границы, в которых располагаются буквы английского алфавита. Выведите на экран символ с кодом 33.
*/

echo chr(33)." = символ 33<br>";

//-------------------------------------------------------------------------
/*
25. Запишите в переменную $str случайный символ — большую букву латинского алфавита. Подсказка: с помощью таблицы ASCII определите какие целые числа соответствуют большим буквам латинского алфавита.
*/

$str = chr(rand(65,90));
echo $str."<br>";

//-------------------------------------------------------------------------
/*
26. Запишите в переменную $str случайную строку $len длиной, состоящую из маленьких букв латинского алфавита. Подсказка: воспользуйтесь циклом for или while.
*/

$str ='';
$len =5; 
for ($i=0; $i<$len; $i++) {
    $str .= chr(rand(97,122));
}
echo $str."<br>";

//-------------------------------------------------------------------------
/*
Работа с substr_count, str_word_count, str_split

27. Дана строка 'Мама мыла раму'. Узнайте количество букв 'a' и 'м', входящих в эту строку.
*/

$a= 'Мама мыла раму';
echo substr_count($a, 'а'). "; ";
echo substr_count($a, 'м')."<br>";

//-------------------------------------------------------------------------
/*
28. Скопируйте весь текст со страницы php.su, запишите его в переменную $str. Подсчитайте количество символов и количество слов в даннной строке.
*/

$str = 'Are you starting to learn PHP? Read the introductory course on learning PHP. Also for beginners, our professionals collected materials on the PHP.SU forum and posted it in the form of PHP Lessons. Do you know the basics of PHP and want to strengthen your knowledge? Refer directly to the "Learning PHP" section. We also recommend that you read the principles of PHP with the HTTP protocol. You will also need a reference book for all PHP functions, completely in Russian. Function Reference PHP is equipped with a search function for keywords. In PHP, there are extensive tools for working with DBMS, such as MySQL. You can use PHP to work with many different types of DBMS.';
$a= str_word_count($str);
echo "$a ; ";
echo strlen ($str)."<br>";

//-------------------------------------------------------------------------
/*
29. Создайте массив гласных букв. С помощью этого массива подсчитайте количество гласных в строке $str. Результат представьте в виде ассоциативного массива, где ключами будут буквы, а элементами их количество.
*/

$arr = ['a', 'o', 'u', 'e', 'i', 'y'];
$arr1 = str_split($str);
print_r($arr1);
echo "<br>";


//-------------------------------------------------------------------------
/*
30. Дана строка '1234567890'. Разбейте ее на массив с элементами '12', '34', '56', '78', '90'.
*/

$b = '1234567890';
$ar = str_split($b, 2);
print_r ($ar);
echo "<br>";

//-------------------------------------------------------------------------
/*
Работа с str_repeat, strrev

31. Проверьте, является ли пара слов палиндромом (одинаково читается во всех направлениях, кот-ток, нос-сон).
*/

echo strrev("kot-tok")."; ";
echo strrev("nos-son")."<br>";

//--------------------------------------------------------------------------
/*
32. Дан массив $arr. Найдите в нем все пары слов-палиндромов (одинаково читаются во всех направлениях, кот-ток, нос-сон). Результат выводите в виде строка формата 'нос — сон'. Проверьте работу скрипта на массиве $arr из примера. Совет: нужно сделать не один, а два цикла.
$arr = array('slon', 'nos', 'tok', 'tak', 'kot', 'pir', 'mir','son', 'rim');
*/

$arr = array('slon', 'nos', 'tok', 'tak', 'kot', 'pir', 'mir','son', 'rim');
$result= array();
for($i=0; $i<count($arr); $i++) {
    $a = strrev($arr[$i]);
   for ($ii=0; $ii<count($arr); $ii++) {
            $key = array_search($a, $result);
            $key2 = array_search($arr[$ii], $result); 
            if ($arr[$ii] == $a && $key === FALSE && $key2 === FALSE) {
                $result[]=$arr[$i];
                echo "$arr[$i] - $a; ";
            }   
   }
}
echo "<br>";
//--------------------------------------------------------------------------
/*S
33. Определите является ли фраза палиндромом. Примеры: 'A roza upala na lapu Asora'. Обратите внимание на то, что при обратном чтении игнорируются пробелы, запятые, дефисы, тире и большие буквы (подсказка: значит сначала нужно привести строку к стандартному виду — удалить лишние символы, привести все к нижнему регистру).
*/

$stt= 'A roza upala na lapu Asora';
$stt= strtolower($stt);
$stt= str_replace (" ", "", $stt);
echo strrev($stt)."<br>";

//--------------------------------------------------------------------------
/*
34. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов, а не 5. Решите задачу с помощью одного цикла и функции str_repeat.

x
xx
xxx
xxxx
xxxxx
*/

$x='';
for ($i = 1; $i <= 9; $i++)
{
    $x=str_repeat($x, 1).'x';
    echo "$x<br>";
}

//--------------------------------------------------------------------------
/*
35. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов, а не 5. Решите задачу с помощью одного цикла и функции str_repeat.

1
22
333
4444
55555
*/

$x='';
for ($i = 1; $i <= 9; $i++)
{
    $x='';
    for  ($a = 1; $a<= $i; $a++) {
        $x=str_repeat($x, 1)."$i";
    }
    echo "$x<br>";
}

?>
